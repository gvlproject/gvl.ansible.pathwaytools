  # This is the main install script for Pathway Tools server on the GVL.

  # Check to see if gvl-apps dir is setup and installed
  - name: Check to see if gvl/apps dir exists and create if required
    file: name="{{ gvl_apps_home }}" state=directory owner=ubuntu group=ubuntu
    become: yes
    become_user: root

  # Do an apt-get update
  - name: Update the apt cache
    apt: update_cache=yes
    become: yes
    become_user: root

  # Install some extra system packages:
  - name: install required extra system packages
    apt: pkg={{ item }} state="latest"
    become: yes
    become_user: root
    with_items:
      - software-properties-common
      - mysql-server
      - python-mysqldb
      - xvfb

  # Set environment DISPLAY variable
  - name: add export line to the file .bashrc
    lineinfile:
      dest=/home/ubuntu/.bashrc
      line="export DISPLAY=:1"
      owner=ubuntu
      state=present
      insertafter=EOF
      create=true

  # Create the Pathway Tools file tree
  - name: create the Pathway Tools file tree
    file: name={{ item }} state=directory owner=ubuntu group=ubuntu
    become: yes
    become_user: root
    with_items:
      - "{{ ptools_home }}"
      - "{{ ptools_database }}"

  - name: Remove the MySQL test database
    action: mysql_db db="{{ ptools_mysql_database }}" state=absent

  # Get the Pathway Tools release
  - name: Download Pathway Tools file
    get_url: url="{{ ptools_install_file }}" dest="{{ ptools_home }}/pathway-tools-19.5-linux-64-t1-mammal-install"
    environment: "{{ install_env }}"
    become: yes
    become_user: "ubuntu"

  # Change the Pathway Tools file to executable
  - name: Change Pathway Tools file to executable
    file: path="{{ ptools_home }}/pathway-tools-19.5-linux-64-t1-mammal-install" state=file mode="u+x"

  # Download the metaCyc database file
  - name: Download the metaCyc database file
    get_url: url="{{ ptools_database_file }}" dest="{{ ptools_database }}/meta.tar.gz"
    become: yes
    become_user: "ubuntu"

  # Unarchive metaCyc database
  - name: Extract archive
    unarchive: src="{{ ptools_database }}/meta.tar.gz" dest="{{ ptools_database }}" copy=no
    become: yes
    become_user: "ubuntu"

  # Change the Pathway Tools file to executable
  - name: Execute script if the pathway tools is not installed
    command: "{{ ptools_home }}/pathway-tools-19.5-linux-64-t1-mammal-install --unattendedmodeui none --mode unattended --InstallDir /mnt/gvl/apps/pathwaytools --PTOOLS_LOCAL_PATH /mnt/gvl/apps/pathwaytools"
    become: yes
    become_user: "ubuntu"
    register: ptools

  - debug: msg="{{ ptools.stdout }}"

  # Remove web-accounts.sql into pathwaytools/aic-export/mysql/ folder
  - name: Remove old web-accounts.sql files foo
    file: path="{{ mysql_schema }}/web-accounts.sql" state=absent

  # Download web-accounts.sql into pathwaytools/aic-export/mysql/ folder
  - name: Download MYSQL web schema file for Pathway Tools
    get_url: url="{{ ptools_mysql_schema_webfile }}" dest="{{ mysql_schema }}/web-accounts.sql"
    become: yes
    become_user: ubuntu

  # Remove ptools-init.dat file pathwaytools/ptools-local folder
  - name: Remove old pathway tools configuration files
    file: path="{{ ptools_conf_home }}/ptools-init.dat" state=absent

  # Add pathway tools web server init file
  - name: "Copy Pathway Tools www init file"
    copy: src="ptools-init.dat" dest="/mnt/gvl/apps/pathwaytools/ptools-local/ptools-init.dat" mode=0600
    become: yes
    become_user: ubuntu

  - name: Create the Pathway database
    mysql_db: name="{{ ptools_mysql_database }}" state=present
    become: yes
    become_user: root

  # Grant privileges and create database
  - name: Grant privileges on pathway DB to ptuser user
    mysql_user: name="{{ database_user }}" password="{{ database_pass }}" priv="pathwayDB.*:ALL" host="localhost" state=present
    become: yes
    become_user: root

  - name: import schema pgdb-schema.sql
    mysql_db: name="{{ ptools_mysql_database }}" state=import target="{{ mysql_schema }}/pgdb-schema.sql"

  - name: import schema web-accounts.sql
    mysql_db: name="{{ ptools_mysql_database }}" state=import target="{{ mysql_schema }}/web-accounts.sql"

  # Enable mysql
  - name: "Enable mysql"
    service: name="{{ item }}" enabled=yes
    become: yes
    become_user: root
    with_items:
      - mysql

  # Add file to nginx folder to get web server and nginx to talk nicely
  - name: "Copy nginx config file"
    copy: src="ptools.locations" dest="{{ nginx_config }}/ptools.locations" mode=0600
    become: yes
    become_user: root

  - name: Copy the version info file into GVLDash
    template: src=version_info.j2 dest={{ gvl_install_path }}/info/pathway_tools.yml

  # Restart Nginx to apply changes
  - name: "restart nginx"
    service: name=nginx state=restarted
    become: yes
    become_user: root

  # Download xvfb into /etc/init.d/ folder
  - name: Download xvfb file for Pathway Tools
    get_url: url="{{ ptools_xvfb_file }}" dest="{{ xvfb_home }}/xvfb" mode=0755
    become: yes
    become_user: root

  # copy autostart pathwaytools script into /mnt/gvl/apps/scripts folder
  - name: copy autostart Pathway Tools script into script directory
    copy: src="pathwaytools.sh" dest="{{ gvl_apps_home }}/scripts/pathwaytools.sh" mode=0755
    become: yes
    become_user: ubuntu

  # Download run pathwaytools script into /mnt/gvl/apps/scripts folder
  - name: copy Pathway Tools script into script directory 
    get_url: url="{{ ptools_run_file }}" dest="{{ gvl_apps_home }}/scripts/run_pathwaytools.sh" mode=0755
    become: yes
    become_user: ubuntu

  # Start xvfb
  - name: run xvfb
    action: service name=xvfb state=started
    become: yes
    become_user: root
